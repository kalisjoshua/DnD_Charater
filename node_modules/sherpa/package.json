{
  "author": {
    "name": "Joshua T Kalis",
    "email": "kalisjoshua@gmail.com",
    "url": "http://joshuakalis.com"
  },
  "name": "sherpa",
  "description": "Watch files in a directory for changes/updates",
  "version": "0.1.7",
  "homepage": "https://github.com/kalisjoshua/sherpa",
  "repository": {
    "type": "git",
    "url": "https://github.com/kalisjoshua/sherpa.git"
  },
  "main": "lib/main.js",
  "dependencies": {},
  "devDependencies": {
    "expresso": ">=0.9.2"
  },
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "readme": "# Sherpa\n\nWatch files in a directory for changes/updates.\n\nI know that this might not be the best way to do this but it seems to work for right now so I am putting it out there. Simply create a file to execute in the terminal (example below) and point it at the directory you would like to watch. When a file is changed the callback you pass in will execute and you can do whatever you want with the change.\n\nI have started using this in conjunction with Grunt.js so I don't have to grunt with each change to my files while developing.\n\n## Basic Usage\n\nCreate a file in the root of your project with the contents below; don't forget chmod +x <filename>.\n\n    #!/usr/bin/env node\n    /*jshint laxcomma:true strict:false*/\n    /*globals require*/\n    var sherpa = require(\"sherpa\");\n\n    var backpack = {\n          js    : function (filename) {\n            sherpa.exec(filename, \"grunt js\");\n          }\n          ,less : function (filename) {\n            sherpa.exec(filename, \"grunt less\");\n          }\n        };\n\n    sherpa(\"src\", 300, function (filename, curr, prev) {\n      if (+curr.mtime !== +prev.mtime) {\n        try {\n          backpack[/.*\\.(.*)$/.exec(filename)[1]](filename);\n        } catch (e) {\n          sherpa.exec(filename + \"\\n But I don't know what to do with it. :-(\");\n        }\n      }\n    });\n\n## Testing\n\nI have started some simple tests using expresso. To run tests simply ensure that the npm modules are installed by executing `npm install` in the root directory. Then execute `expresso` in the root. Hopefully all tests should pass.\n",
  "readmeFilename": "README.md",
  "_id": "sherpa@0.1.7",
  "_from": "sherpa"
}
